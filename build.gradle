buildscript {
    repositories {
		mavenLocal()
        mavenCentral()
		jcenter()	
        //maven {
        //    name = "forge"
        //    url = "http://files.minecraftforge.net/maven"
        //}
		maven {
			name = "gt"
			url = "https://gregtech.overminddl1.com/"
		}	
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
		maven {
			url = "https://plugins.gradle.org/m2/"
		}
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT"
    }
}

// Because Forge is too stupid to fix Deprecation Issues, and we cannot fix it on our end! (until we fork Forge)
allprojects {
	tasks.withType(Javadoc) {
		//options.compilerArgs << "-Xlint:deprecation"
		options.addStringOption('Xdoclint:none', '-quiet')
	}
}

apply plugin: 'eclipse'
eclipse {
	classpath {
		downloadJavadoc = true
		downloadSources = true
	}
}

apply plugin: 'idea'
idea{
	module {
		downloadJavadoc = true
		downloadSources = true
	}
}

apply plugin: 'forge'

file "build.properties" withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

file "version.properties" withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config2 = new ConfigSlurper().parse prop
}

version = "${config.gtpp.version}.${config2.mod.version}"
group= "AlkCoreMod"
archivesBaseName = "AlkCoreMod"


//Java Version
sourceCompatibility = 1.8
targetCompatibility = 1.8

//Compile against UTF-8
compileTestJava.options.encoding = 'UTF-8'
javadoc.options.encoding = 'UTF-8'
compileJava.options.encoding = 'UTF-8'

minecraft {
    version = "${config.minecraft.version}-${config.forge.version}"
    runDir = "eclipse"
}

idea { module { inheritOutputDirs = true } }

configurations {
    provided
    embedded
    shade
    compile.extendsFrom provided, embedded, shade
}

repositories {
	maven {
		name = "gt"
		url = "http://gregtech.overminddl1.com/"
	}
	maven {
		name = "ic2"
		url = "http://maven.ic2.player.to/"
	}
}

sourceSets {
    main {
        java { srcDirs = ["$projectDir/src/Java"] }
        resources { srcDirs = ["$projectDir/src/resources"] }
    }
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
	exclude '**/Thumbs.db'
}

dependencies {        
	compile "mcp.mobius.waila:Waila:1.5.11-RC2-NONEI_1.7.10:dev"
	compile "codechicken:CodeChickenLib:1.7.10-1.1.3.140:dev"
	compile "codechicken:CodeChickenCore:1.7.10-1.0.7.47:dev"
	compile "codechicken:NotEnoughItems:1.7.10-1.0.5.120:dev"
    compile "api.player:PlayerAPI:1.7.10-1.4"
	
	
	compile "cofh:CoFHCore:1.7.10R3.0.4:dev"
	compile "cofh:CoFHLib:1.7.10R3.0.3:dev"	
	compileOnly "mods.railcraft:Railcraft_1.7.10:9.12.3.0:dev"
    	
	//compileOnly "micdoodle8.mods:MicdoodleCore:1.7-3.0.12.504:Dev"
	//compileOnly "micdoodle8.mods:GalacticraftCore:1.7-3.0.12.504:Dev"
	//compileOnly "micdoodle8.mods:Galacticraft-Planets:1.7-3.0.12.504:Dev"	
	
	compileOnly "thaumcraft:Thaumcraft:1.7.10-4.2.3.5:dev"	
	compileOnly "com.azanor.baubles:Baubles:1.7.10-1.0.1.10:deobf"	
}

jar {
    archiveName = archivesBaseName + "-" + version + ".jar"
    manifest {
        attributes 'FMLCorePlugin': 'alkcoremod.preloader.asm.Preloader_FMLLoadingPlugin'
        attributes 'FMLCorePluginContainsFMLMod': 'true'
    }
    configurations.shade.each { dep ->
    	from(project.zipTree(dep)){
        	exclude 'META-INF', 'META-INF/**'
    	}
    }
}

